% Read wav file generated by BYB Spike recorder - live emulation

clear all
close all

file_name = 'BYB_Recording_2019-01-18_18.15.16.wav';
[Y,Fs] = audioread(file_name);
T = [1:length(Y)]/Fs;   % time in seconds

TWindow = 0.2;    % observation interval
TMax = max(T);  % maximum time recorded
dT = T(2)-T(1); % dT
NWindow = TWindow/dT;   % number of points in Window
delay_time = TWindow;   % wait the "recording interval" time
Y = Y/max(Y);
% loop and plot..
for k =1:round(TMax/TWindow)
    
    % simplest approach: the first window only is the noise
 
    threshold_level = 0.05;
    blinks_level = 3;

    
    window_index_beginning = 1+NWindow*(k-1);
    window_index_end = NWindow+NWindow*(k-1);
    window_index_range = window_index_beginning:window_index_end;
    figure(1)
    clf
    subplot(3,1,1)
    hold all
    plot(T,Y)
    title(['threshold =' num2str(threshold_level)])
    % plot the window you are looking at
    plot([T(window_index_beginning),T(window_index_beginning)],[min(Y),max(Y)],'k')   
    plot([T(window_index_end),T(window_index_end)],[min(Y),max(Y)],'k')   
    xlabel('time [s]')
    ylabel('signal [a.u.]')
    box on

    
    % plot the reduced window
    subplot(3,1,2)
    plot(T(window_index_range),Y(window_index_range))
    box on
    ylim([-0.1,0.1])
    xlabel('time [s]')
    ylabel('signal [a.u.]')

    % plot the average of this window, identify event
    average_signal = mean(Y(window_index_range));
    subplot(3,1,3)
    plot(average_signal ,'o')
    box on
    ylim([-0.1,0.1])
    set(gca,'XTick',[])
    ylabel('signal [a.u.]')
    legend('average signal in window')
    
    if average_signal>threshold_level && average_signal<blinks_level
       title('above threshold!')    
    elseif average_signal<-threshold_level && average_signal > -blinks_level
       title('below threshold!')
    elseif average_signal >= abs(blinks_level)
        title('Blink')
    else
        title('nothing happening')
    end
    pause(delay_time)
end
